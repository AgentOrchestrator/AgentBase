# =============================================================================
# Docker Environment Configuration
# =============================================================================
# Copy this file to .env and update with your values:
#   cp .env.example .env

# =============================================================================
# REQUIRED: Supabase Configuration
# =============================================================================
# You have TWO OPTIONS for Supabase setup:
#
# OPTION 1: Local Supabase (recommended for development)
# -------------------------------------------------------
# 1. Install Supabase CLI:
#    macOS:  brew install supabase/tap/supabase
#    Linux:  curl -fsSL https://supabase.com/install.sh | sh
#
# 2. Start Supabase (runs full stack: Kong, GoTrue, Storage, etc.):
#    supabase start
#
# 3. Get your credentials:
#    supabase status
#
# 4. Copy the values from "supabase status" output:
# IMPORTANT: Use 127.0.0.1 for local Supabase (NOT host.docker.internal)
# This is used by non-Docker services and as fallback
SUPABASE_URL=http://127.0.0.1:54321
SUPABASE_ANON_KEY=your-anon-key-from-supabase-status

# For Docker Containers: Server-side URL (daemon and Next.js server-side code)
# Use host.docker.internal to reach Supabase running on host machine from inside containers
SUPABASE_SERVER_URL=http://host.docker.internal:54321

# For Docker Web Container: Client-side URL (browser JavaScript)
# Use localhost so browser can reach Supabase on host machine
# If not set, falls back to SUPABASE_URL
SUPABASE_CLIENT_URL=http://localhost:54321

# OPTION 2: Remote Supabase (for team collaboration)
# ---------------------------------------------------
# 1. Create a project at https://supabase.com
# 2. Get credentials from Project Settings â†’ API
# 3. Use these values (same URL for both):
# SUPABASE_URL=https://your-project-id.supabase.co
# SUPABASE_ANON_KEY=your-remote-anon-key
# SUPABASE_SERVER_URL=https://your-project-id.supabase.co

# =============================================================================
# OPTIONAL: OpenAI (for AI summaries)
# =============================================================================
OPENAI_API_KEY=
DEVELOPMENT=true

# =============================================================================
# OPTIONAL: Memory Service
# =============================================================================
SUPABASE_SERVICE_ROLE_KEY=
ANTHROPIC_API_KEY=
MEM0_MODE=self-hosted

# =============================================================================
# AI Assistant Data Paths (Choose your OS)
# =============================================================================
# macOS (default):
CURSOR_PATH=${HOME}/Library/Application Support/Cursor
VSCODE_PATH=${HOME}/Library/Application Support/Code

# Linux (uncomment these and comment out macOS paths):
# CURSOR_PATH=${HOME}/.config/Cursor
# VSCODE_PATH=${HOME}/.config/Code

# Common paths (all platforms):
CLAUDE_CODE_PATH=${HOME}/.claude
CODEX_PATH=${HOME}/.codex
FACTORY_PATH=${HOME}/.factory

# =============================================================================
# Web Interface URL (for authentication links)
# =============================================================================
# The publicly accessible URL where users can reach the web interface
# Default: http://localhost:3000 (for local development)
# Production: Set this to your actual domain (e.g., https://app.example.com)
PUBLIC_WEB_URL=http://localhost:3000

# =============================================================================
# Daemon Settings
# =============================================================================
PERIODIC_SYNC_INTERVAL_MS=600000
SESSION_LOOKBACK_DAYS=30
LOG_LEVEL=INFO
